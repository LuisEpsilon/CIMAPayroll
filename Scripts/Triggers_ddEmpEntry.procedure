Procedure	"Triggers_ddEmpEntry"
{
	Core	"Payroll"
	Documentation	""
	Script	"{
	triggers for the Direct Deposity Employee Entry screen
	
}

local long l_result;
local integer l_tag;

l_result = Trigger_RegisterFocus(anonymous('Display Existing Record'  of window ddEmpEntry of form ddEmpEntry),
												 TRIGGER_FOCUS_CHANGE, 
												 TRIGGER_AFTER_ORIGINAL, 
												 script Trig_ddEmpEntry_DER, l_tag);
if l_result <> SY_NOERR then
 warning \"Direct Deposit Bank window Display Existing Record Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;

l_result = Trigger_RegisterFocus(anonymous('Save Record'  of window ddEmpEntry of form ddEmpEntry),
												 TRIGGER_FOCUS_CHANGE, 
												 TRIGGER_AFTER_ORIGINAL, 
												 script Trig_ddEmpEntry_Save_Record, l_tag);
if l_result <> SY_NOERR then
 warning \"Direct Deposit Bank window Save Record Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;

/* Commented by LuisSoto, this taks is executed in another script*/
{l_result = Trigger_RegisterFocus(anonymous(window Scroll of form ddEmpEntry), TRIGGER_FOCUS_FILL, TRIGGER_AFTER_ORIGINAL, script Trig_ddEmpEntry_Scroll_Fill, l_tag);
if l_result <> SY_NOERR then
    warning \"Scroll Line Fill trigger registration failed.\";
end if;
call EX_Register_Trigger,l_tag;}

{Save}
l_result = Trigger_RegisterFocus(anonymous(window Scroll of form ddEmpEntry),
								TRIGGER_FOCUS_CHANGE,
								TRIGGER_AFTER_ORIGINAL, 
								script RNC_Scroll_SCROLL_CHG_Trigger_AFTER);
if l_result <> SY_NOERR then
	warning \"The 'RNC_Scroll SCROLL_CHG_Trigger_AFTER' trigger is not registered. \" + str(l_result);
end if;

l_result = Trigger_RegisterFocus(anonymous(window Scroll of form ddEmpEntry),
								TRIGGER_FOCUS_CHANGE,
								TRIGGER_BEFORE_ORIGINAL, 
								script SAE_scroll_DDEmpEntry_Trigger_CHG_BEFORE);
if l_result <> SY_NOERR then
	warning \"The 'RNC_Scroll SCROLL_CHG_Trigger_AFTER' trigger is not registered. \" + str(l_result);
end if;

{Fill}
l_result = Trigger_RegisterFocus(anonymous(window Scroll of form ddEmpEntry),
								TRIGGER_FOCUS_FILL,
								TRIGGER_AFTER_ORIGINAL, 
								script RNC_Scroll_SCROLL_FILL_Trigger_After);
if l_result <> SY_NOERR then
	warning \"The 'RNC_Scroll SCROLL_CHG_Trigger_AFTER' trigger is not registered. \" + str(l_result);
end if;

{l_result = Trigger_RegisterFocus(anonymous(window Scroll of form ddEmpEntry),
								TRIGGER_FOCUS_PRE,
								TRIGGER_AFTER_ORIGINAL, 
								script SAE_DDEmpEntry_LINE_PRE_Trigger_AFTER);
if l_result <> SY_NOERR then
	warning \"The 'RNC_Scroll SCROLL_CHG_Trigger_AFTER' trigger is not registered. \" + str(l_result);
end if;}


{Fill}
l_result = Trigger_RegisterFocus(anonymous('(L) TempRange' of window ddEmpEntry of form ddEmpEntry),
								TRIGGER_FOCUS_CHANGE,
								TRIGGER_AFTER_ORIGINAL, 
								script RNC_ddEmpEntry_TempRange_CHG_Trigger_AFTER);
if l_result <> SY_NOERR then
	warning \"The 'RNC_Scroll SCROLL_CHG_Trigger_AFTER' trigger is not registered. \" + str(l_result);
end if;


{Delete}
l_result = Trigger_RegisterDatabase(anonymous(table ddEmpLineTemp), 
			form ddEmpEntry, 
			TRIGGER_ON_DB_DELETE, 
			script RNC_ddEmpLineTempr_Delete_Trigger_AFTER);
if l_result<>SY_NOERR then
	warning \"Database trigger registration failed RNC_ddEmpLineTempr_Delete_Trigger_AFTER.\";
end if;

l_result = Trigger_RegisterDatabase(anonymous(table ddEmpAcctMstr), 
			0, 
			TRIGGER_ON_DB_DELETE, 
			script RNC_ddEmpAcctMstr_Delete_Trigger_AFTER);
if l_result<>SY_NOERR then
	warning \"Database trigger registration failed RNC_ddEmpAcctMstr_Delete_Trigger_AFTER.\";
end if;



{Save}
l_result = Trigger_RegisterFocus(anonymous(window ddEmpEntry of form ddEmpEntry),
								TRIGGER_FOCUS_PRE,
								TRIGGER_AFTER_ORIGINAL, 
								script RNC_PRE_Trigger_AFTER);
if l_result <> SY_NOERR then
	warning \"The 'RNC_Scroll SCROLL_CHG_Trigger_AFTER' trigger is not registered. \" + str(l_result);
end if;


l_result = Trigger_RegisterFocus(anonymous('Save Record'  of window ddEmpEntry of form ddEmpEntry),
												 TRIGGER_FOCUS_CHANGE, 
												 TRIGGER_BEFORE_ORIGINAL, 
												 script DDR_Deduction_SaveButton_Trigger_BEFORE, l_tag);
if l_result <> SY_NOERR then
 warning \"Direct Deposit Bank window Save Record Before Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;

l_result = Trigger_RegisterFocus(anonymous('Employee ID'  of window ddEmpEntry of form ddEmpEntry),
												 TRIGGER_FOCUS_CHANGE, 
												 TRIGGER_AFTER_ORIGINAL, 
												 script SAE_ddEmpEntry_EmployeeID_Trigger_CHG_After, l_tag);
if l_result <> SY_NOERR then
 warning \"Direct Deposit Bank window Save Record Before Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;
l_result = Trigger_RegisterFocus(anonymous(window ddEmpEntry of form ddEmpEntry),
												 TRIGGER_FOCUS_PRE,
												 TRIGGER_AFTER_ORIGINAL, 
												 script SAE_ddEmpEntry_WINPRE_Trigger_After, l_tag);
if l_result <> SY_NOERR then
 warning \"Direct Deposit Bank window Display Existing Record Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;

l_result = Trigger_RegisterFocus(anonymous('(L) Temp EmpID' of window ddEmpEntry of form ddEmpEntry),
												 TRIGGER_FOCUS_CHANGE, 
												 TRIGGER_AFTER_ORIGINAL, 
												 script SAE_ddEmpEntry_TempEMPID_Trigger_AFTER, l_tag);
if l_result <> SY_NOERR then
 warning \"SAE_ddEmpEntry_TempEMPID_Trigger_AFTER Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;

l_result = Trigger_RegisterFocus(anonymous('(L) VerifySave' of window ddEmpEntry of form ddEmpEntry),
												 TRIGGER_FOCUS_CHANGE, 
												 TRIGGER_AFTER_ORIGINAL, 
												 script BPICF_VerifySave_Trigger_AFTER, l_tag);
if l_result <> SY_NOERR then
 warning \"BPICF_VerifySave_Trigger_AFTER Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;


/* added by LuisSoto: 09.01.2024 
	*teams: https://rb.gy/b2okjt */

l_result = Trigger_RegisterFocus(anonymous('(L) RemoveItem' of window ddEmpEntry of form ddEmpEntry),
											 TRIGGER_FOCUS_CHANGE, 
											 TRIGGER_AFTER_ORIGINAL, 
											 script EX_ResequenceItem, l_tag);
if l_result <> SY_NOERR then
 warning \"Resequence Item Line on Direct Deposit Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;

l_result = Trigger_RegisterFocus(anonymous('Clear Button' of window ddEmpEntry of form ddEmpEntry),
											 TRIGGER_FOCUS_CHANGE, 
											 TRIGGER_AFTER_ORIGINAL, 
											 script EX_ClearTemTableOpened, l_tag);
if l_result <> SY_NOERR then
 warning \"Clear temp table opened on Direct Deposit Trigger failed to register.\";
end if;
call EX_Register_Trigger,l_tag;

"
	ServiceAction	""
	ServiceCustomAciton	""
	ServiceEnabled	"FALSE"
	ServiceRawRequest	"FALSE"
	ServiceUriTemplate	""
	UserProperties	""
}
